// automatically generated by the FlatBuffers compiler, do not modify

package vn.com.vng.gsmobile.casino.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class CMDQuitLobby extends Table {
  public static CMDQuitLobby getRootAsCMDQuitLobby(ByteBuffer _bb) { return getRootAsCMDQuitLobby(_bb, new CMDQuitLobby()); }
  public static CMDQuitLobby getRootAsCMDQuitLobby(ByteBuffer _bb, CMDQuitLobby obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public CMDQuitLobby __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long uid() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public boolean mutateUid(long uid) { int o = __offset(4); if (o != 0) { bb.putLong(o + bb_pos, uid); return true; } else { return false; } }
  public int gameType() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean mutateGameType(int game_type) { int o = __offset(6); if (o != 0) { bb.put(o + bb_pos, (byte)game_type); return true; } else { return false; } }
  public int lobbyType() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean mutateLobbyType(int lobby_type) { int o = __offset(8); if (o != 0) { bb.put(o + bb_pos, (byte)lobby_type); return true; } else { return false; } }

  public static int createCMDQuitLobby(FlatBufferBuilder builder,
      long uid,
      int game_type,
      int lobby_type) {
    builder.startObject(3);
    CMDQuitLobby.addUid(builder, uid);
    CMDQuitLobby.addLobbyType(builder, lobby_type);
    CMDQuitLobby.addGameType(builder, game_type);
    return CMDQuitLobby.endCMDQuitLobby(builder);
  }

  public static void startCMDQuitLobby(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addUid(FlatBufferBuilder builder, long uid) { builder.addLong(0, uid, 0); }
  public static void addGameType(FlatBufferBuilder builder, int gameType) { builder.addByte(1, (byte)gameType, 0); }
  public static void addLobbyType(FlatBufferBuilder builder, int lobbyType) { builder.addByte(2, (byte)lobbyType, 0); }
  public static int endCMDQuitLobby(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

