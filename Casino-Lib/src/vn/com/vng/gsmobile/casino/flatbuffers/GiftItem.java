// automatically generated by the FlatBuffers compiler, do not modify

package vn.com.vng.gsmobile.casino.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class GiftItem extends Table {
  public static GiftItem getRootAsGiftItem(ByteBuffer _bb) { return getRootAsGiftItem(_bb, new GiftItem()); }
  public static GiftItem getRootAsGiftItem(ByteBuffer _bb, GiftItem obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public GiftItem __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public Gift gift(int j) { return gift(new Gift(), j); }
  public Gift gift(Gift obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int giftLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public int day() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean mutateDay(int day) { int o = __offset(8); if (o != 0) { bb.put(o + bb_pos, (byte)day); return true; } else { return false; } }
  public long expiredTime() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public boolean mutateExpiredTime(long expired_time) { int o = __offset(10); if (o != 0) { bb.putLong(o + bb_pos, expired_time); return true; } else { return false; } }
  public String msg() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer msgAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }

  public static int createGiftItem(FlatBufferBuilder builder,
      int idOffset,
      int giftOffset,
      int day,
      long expired_time,
      int msgOffset) {
    builder.startObject(5);
    GiftItem.addExpiredTime(builder, expired_time);
    GiftItem.addMsg(builder, msgOffset);
    GiftItem.addGift(builder, giftOffset);
    GiftItem.addId(builder, idOffset);
    GiftItem.addDay(builder, day);
    return GiftItem.endGiftItem(builder);
  }

  public static void startGiftItem(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addGift(FlatBufferBuilder builder, int giftOffset) { builder.addOffset(1, giftOffset, 0); }
  public static int createGiftVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startGiftVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addDay(FlatBufferBuilder builder, int day) { builder.addByte(2, (byte)day, 0); }
  public static void addExpiredTime(FlatBufferBuilder builder, long expiredTime) { builder.addLong(3, expiredTime, 0); }
  public static void addMsg(FlatBufferBuilder builder, int msgOffset) { builder.addOffset(4, msgOffset, 0); }
  public static int endGiftItem(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

