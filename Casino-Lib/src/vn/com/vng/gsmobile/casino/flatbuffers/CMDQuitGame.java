// automatically generated by the FlatBuffers compiler, do not modify

package vn.com.vng.gsmobile.casino.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class CMDQuitGame extends Table {
  public static CMDQuitGame getRootAsCMDQuitGame(ByteBuffer _bb) { return getRootAsCMDQuitGame(_bb, new CMDQuitGame()); }
  public static CMDQuitGame getRootAsCMDQuitGame(ByteBuffer _bb, CMDQuitGame obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public CMDQuitGame __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long uid() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public boolean mutateUid(long uid) { int o = __offset(4); if (o != 0) { bb.putLong(o + bb_pos, uid); return true; } else { return false; } }
  public long roomId() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public boolean mutateRoomId(long room_id) { int o = __offset(6); if (o != 0) { bb.putLong(o + bb_pos, room_id); return true; } else { return false; } }
  public int state() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean mutateState(int state) { int o = __offset(8); if (o != 0) { bb.put(o + bb_pos, (byte)state); return true; } else { return false; } }

  public static int createCMDQuitGame(FlatBufferBuilder builder,
      long uid,
      long room_id,
      int state) {
    builder.startObject(3);
    CMDQuitGame.addRoomId(builder, room_id);
    CMDQuitGame.addUid(builder, uid);
    CMDQuitGame.addState(builder, state);
    return CMDQuitGame.endCMDQuitGame(builder);
  }

  public static void startCMDQuitGame(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addUid(FlatBufferBuilder builder, long uid) { builder.addLong(0, uid, 0); }
  public static void addRoomId(FlatBufferBuilder builder, long roomId) { builder.addLong(1, roomId, 0); }
  public static void addState(FlatBufferBuilder builder, int state) { builder.addByte(2, (byte)state, 0); }
  public static int endCMDQuitGame(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

