// automatically generated by the FlatBuffers compiler, do not modify

package vn.com.vng.gsmobile.casino.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class CMDGetVIPInfo extends Table {
  public static CMDGetVIPInfo getRootAsCMDGetVIPInfo(ByteBuffer _bb) { return getRootAsCMDGetVIPInfo(_bb, new CMDGetVIPInfo()); }
  public static CMDGetVIPInfo getRootAsCMDGetVIPInfo(ByteBuffer _bb, CMDGetVIPInfo obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public CMDGetVIPInfo __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long uid() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public boolean mutateUid(long uid) { int o = __offset(4); if (o != 0) { bb.putLong(o + bb_pos, uid); return true; } else { return false; } }
  public VIPInfo listVipInfo(int j) { return listVipInfo(new VIPInfo(), j); }
  public VIPInfo listVipInfo(VIPInfo obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int listVipInfoLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static int createCMDGetVIPInfo(FlatBufferBuilder builder,
      long uid,
      int list_vip_infoOffset) {
    builder.startObject(2);
    CMDGetVIPInfo.addUid(builder, uid);
    CMDGetVIPInfo.addListVipInfo(builder, list_vip_infoOffset);
    return CMDGetVIPInfo.endCMDGetVIPInfo(builder);
  }

  public static void startCMDGetVIPInfo(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addUid(FlatBufferBuilder builder, long uid) { builder.addLong(0, uid, 0); }
  public static void addListVipInfo(FlatBufferBuilder builder, int listVipInfoOffset) { builder.addOffset(1, listVipInfoOffset, 0); }
  public static int createListVipInfoVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startListVipInfoVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endCMDGetVIPInfo(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

