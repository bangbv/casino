// automatically generated by the FlatBuffers compiler, do not modify

package vn.com.vng.gsmobile.casino.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class LobbyRoom extends Table {
  public static LobbyRoom getRootAsLobbyRoom(ByteBuffer _bb) { return getRootAsLobbyRoom(_bb, new LobbyRoom()); }
  public static LobbyRoom getRootAsLobbyRoom(ByteBuffer _bb, LobbyRoom obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public LobbyRoom __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int lobbyType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean mutateLobbyType(int lobby_type) { int o = __offset(4); if (o != 0) { bb.put(o + bb_pos, (byte)lobby_type); return true; } else { return false; } }
  public int gameType() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean mutateGameType(int game_type) { int o = __offset(6); if (o != 0) { bb.put(o + bb_pos, (byte)game_type); return true; } else { return false; } }
  public vn.com.vng.gsmobile.casino.flatbuffers.RoomInfo roomList(int j) { return roomList(new vn.com.vng.gsmobile.casino.flatbuffers.RoomInfo(), j); }
  public vn.com.vng.gsmobile.casino.flatbuffers.RoomInfo roomList(vn.com.vng.gsmobile.casino.flatbuffers.RoomInfo obj, int j) { int o = __offset(8); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int roomListLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }

  public static int createLobbyRoom(FlatBufferBuilder builder,
      int lobby_type,
      int game_type,
      int room_listOffset) {
    builder.startObject(3);
    LobbyRoom.addRoomList(builder, room_listOffset);
    LobbyRoom.addGameType(builder, game_type);
    LobbyRoom.addLobbyType(builder, lobby_type);
    return LobbyRoom.endLobbyRoom(builder);
  }

  public static void startLobbyRoom(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addLobbyType(FlatBufferBuilder builder, int lobbyType) { builder.addByte(0, (byte)lobbyType, 0); }
  public static void addGameType(FlatBufferBuilder builder, int gameType) { builder.addByte(1, (byte)gameType, 0); }
  public static void addRoomList(FlatBufferBuilder builder, int roomListOffset) { builder.addOffset(2, roomListOffset, 0); }
  public static int createRoomListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startRoomListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endLobbyRoom(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

