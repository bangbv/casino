// automatically generated by the FlatBuffers compiler, do not modify

package vn.com.vng.gsmobile.casino.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class CMDGetLotteryResult extends Table {
  public static CMDGetLotteryResult getRootAsCMDGetLotteryResult(ByteBuffer _bb) { return getRootAsCMDGetLotteryResult(_bb, new CMDGetLotteryResult()); }
  public static CMDGetLotteryResult getRootAsCMDGetLotteryResult(ByteBuffer _bb, CMDGetLotteryResult obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public CMDGetLotteryResult __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long uid() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public boolean mutateUid(long uid) { int o = __offset(4); if (o != 0) { bb.putLong(o + bb_pos, uid); return true; } else { return false; } }
  public LotteryItemInfo result() { return result(new LotteryItemInfo()); }
  public LotteryItemInfo result(LotteryItemInfo obj) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }
  public long starPrice() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0; }
  public boolean mutateStarPrice(long star_price) { int o = __offset(8); if (o != 0) { bb.putInt(o + bb_pos, (int)star_price); return true; } else { return false; } }
  public long coinPrice() { int o = __offset(10); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0; }
  public boolean mutateCoinPrice(long coin_price) { int o = __offset(10); if (o != 0) { bb.putInt(o + bb_pos, (int)coin_price); return true; } else { return false; } }

  public static int createCMDGetLotteryResult(FlatBufferBuilder builder,
      long uid,
      int resultOffset,
      long star_price,
      long coin_price) {
    builder.startObject(4);
    CMDGetLotteryResult.addUid(builder, uid);
    CMDGetLotteryResult.addCoinPrice(builder, coin_price);
    CMDGetLotteryResult.addStarPrice(builder, star_price);
    CMDGetLotteryResult.addResult(builder, resultOffset);
    return CMDGetLotteryResult.endCMDGetLotteryResult(builder);
  }

  public static void startCMDGetLotteryResult(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addUid(FlatBufferBuilder builder, long uid) { builder.addLong(0, uid, 0); }
  public static void addResult(FlatBufferBuilder builder, int resultOffset) { builder.addOffset(1, resultOffset, 0); }
  public static void addStarPrice(FlatBufferBuilder builder, long starPrice) { builder.addInt(2, (int)starPrice, 0); }
  public static void addCoinPrice(FlatBufferBuilder builder, long coinPrice) { builder.addInt(3, (int)coinPrice, 0); }
  public static int endCMDGetLotteryResult(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

