// automatically generated by the FlatBuffers compiler, do not modify

package vn.com.vng.gsmobile.casino.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class CMDGetLotteryList extends Table {
  public static CMDGetLotteryList getRootAsCMDGetLotteryList(ByteBuffer _bb) { return getRootAsCMDGetLotteryList(_bb, new CMDGetLotteryList()); }
  public static CMDGetLotteryList getRootAsCMDGetLotteryList(ByteBuffer _bb, CMDGetLotteryList obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public CMDGetLotteryList __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public LotteryItemInfo lotteryList(int j) { return lotteryList(new LotteryItemInfo(), j); }
  public LotteryItemInfo lotteryList(LotteryItemInfo obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int lotteryListLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public long starPrice() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0; }
  public boolean mutateStarPrice(long star_price) { int o = __offset(6); if (o != 0) { bb.putInt(o + bb_pos, (int)star_price); return true; } else { return false; } }
  public long coinPrice() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0; }
  public boolean mutateCoinPrice(long coin_price) { int o = __offset(8); if (o != 0) { bb.putInt(o + bb_pos, (int)coin_price); return true; } else { return false; } }
  public long uid() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public boolean mutateUid(long uid) { int o = __offset(10); if (o != 0) { bb.putLong(o + bb_pos, uid); return true; } else { return false; } }

  public static int createCMDGetLotteryList(FlatBufferBuilder builder,
      int lottery_listOffset,
      long star_price,
      long coin_price,
      long uid) {
    builder.startObject(4);
    CMDGetLotteryList.addUid(builder, uid);
    CMDGetLotteryList.addCoinPrice(builder, coin_price);
    CMDGetLotteryList.addStarPrice(builder, star_price);
    CMDGetLotteryList.addLotteryList(builder, lottery_listOffset);
    return CMDGetLotteryList.endCMDGetLotteryList(builder);
  }

  public static void startCMDGetLotteryList(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addLotteryList(FlatBufferBuilder builder, int lotteryListOffset) { builder.addOffset(0, lotteryListOffset, 0); }
  public static int createLotteryListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startLotteryListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addStarPrice(FlatBufferBuilder builder, long starPrice) { builder.addInt(1, (int)starPrice, 0); }
  public static void addCoinPrice(FlatBufferBuilder builder, long coinPrice) { builder.addInt(2, (int)coinPrice, 0); }
  public static void addUid(FlatBufferBuilder builder, long uid) { builder.addLong(3, uid, 0); }
  public static int endCMDGetLotteryList(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

