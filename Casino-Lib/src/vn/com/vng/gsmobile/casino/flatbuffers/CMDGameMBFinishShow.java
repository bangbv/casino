// automatically generated by the FlatBuffers compiler, do not modify

package vn.com.vng.gsmobile.casino.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class CMDGameMBFinishShow extends Table {
  public static CMDGameMBFinishShow getRootAsCMDGameMBFinishShow(ByteBuffer _bb) { return getRootAsCMDGameMBFinishShow(_bb, new CMDGameMBFinishShow()); }
  public static CMDGameMBFinishShow getRootAsCMDGameMBFinishShow(ByteBuffer _bb, CMDGameMBFinishShow obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public CMDGameMBFinishShow __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long gameId() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public boolean mutateGameId(long game_id) { int o = __offset(4); if (o != 0) { bb.putLong(o + bb_pos, game_id); return true; } else { return false; } }
  public long roomId() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public boolean mutateRoomId(long room_id) { int o = __offset(6); if (o != 0) { bb.putLong(o + bb_pos, room_id); return true; } else { return false; } }
  public int playerIdx() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean mutatePlayerIdx(int player_idx) { int o = __offset(8); if (o != 0) { bb.put(o + bb_pos, (byte)player_idx); return true; } else { return false; } }

  public static int createCMDGameMBFinishShow(FlatBufferBuilder builder,
      long game_id,
      long room_id,
      int player_idx) {
    builder.startObject(3);
    CMDGameMBFinishShow.addRoomId(builder, room_id);
    CMDGameMBFinishShow.addGameId(builder, game_id);
    CMDGameMBFinishShow.addPlayerIdx(builder, player_idx);
    return CMDGameMBFinishShow.endCMDGameMBFinishShow(builder);
  }

  public static void startCMDGameMBFinishShow(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addGameId(FlatBufferBuilder builder, long gameId) { builder.addLong(0, gameId, 0); }
  public static void addRoomId(FlatBufferBuilder builder, long roomId) { builder.addLong(1, roomId, 0); }
  public static void addPlayerIdx(FlatBufferBuilder builder, int playerIdx) { builder.addByte(2, (byte)playerIdx, 0); }
  public static int endCMDGameMBFinishShow(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

