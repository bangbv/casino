// automatically generated by the FlatBuffers compiler, do not modify

package vn.com.vng.gsmobile.casino.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ListUID extends Table {
  public static ListUID getRootAsListUID(ByteBuffer _bb) { return getRootAsListUID(_bb, new ListUID()); }
  public static ListUID getRootAsListUID(ByteBuffer _bb, ListUID obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public ListUID __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public String trans() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer transAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public long list(int j) { int o = __offset(6); return o != 0 ? bb.getLong(__vector(o) + j * 8) : 0; }
  public int listLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer listAsByteBuffer() { return __vector_as_bytebuffer(6, 8); }
  public boolean mutateList(int j, long list) { int o = __offset(6); if (o != 0) { bb.putLong(__vector(o) + j * 8, list); return true; } else { return false; } }

  public static int createListUID(FlatBufferBuilder builder,
      int transOffset,
      int listOffset) {
    builder.startObject(2);
    ListUID.addList(builder, listOffset);
    ListUID.addTrans(builder, transOffset);
    return ListUID.endListUID(builder);
  }

  public static void startListUID(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addTrans(FlatBufferBuilder builder, int transOffset) { builder.addOffset(0, transOffset, 0); }
  public static void addList(FlatBufferBuilder builder, int listOffset) { builder.addOffset(1, listOffset, 0); }
  public static int createListVector(FlatBufferBuilder builder, long[] data) { builder.startVector(8, data.length, 8); for (int i = data.length - 1; i >= 0; i--) builder.addLong(data[i]); return builder.endVector(); }
  public static void startListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(8, numElems, 8); }
  public static int endListUID(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

